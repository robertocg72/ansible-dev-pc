- name: Google Backup and Sync
  hosts: 127.0.0.1
  connection: local

  vars:
    distribution_fallback:
      'Pop!_OS': 'Ubuntu'
    distribution_release_fallback:
      'focal': 'bionic'
      'impish': 'bionic'
    is_debian_bullseye: "{{ ansible_distribution_release == 'bullseye' }}"
    is_mac: "{{ ansible_distribution == 'MacOSX' }}"

  tasks:
    - set_fact: is_wsl={{ not is_mac and lookup('file', '/proc/version') is regex('(M|m)icrosoft') }}

    # WSL

    - name: Get user's Windows home path
      shell: wslpath "$(cmd.exe /c "echo %USERPROFILE%" 2>/dev/null)"
      register: userprofile
      when: is_wsl

    - name: Check for Google Drive folder
      stat:
        path: "{{ userprofile.stdout }}/Google Drive"
      register: gdrive_path
      when: is_wsl

    - name: Create symlink to ~/gdrive
      file:
        path: ~/gdrive
        src: "{{ userprofile.stdout }}/Google Drive"
        state: link
      when: is_wsl and gdrive_path.stat.exists

    # Linux

    - name: Add Insync APT package key
      become: yes
      apt_key:
        keyserver: hkp://keyserver.ubuntu.com:80
        id: ACCAF35C
      when: not is_mac and not is_debian_bullseye and not is_wsl

    - name: Add Insync APT package repository
      become: yes
      apt_repository:
        repo: deb http://apt.insynchq.com/{{ distribution_fallback[ansible_distribution] | default(ansible_distribution) | lower }} {{ distribution_release_fallback[ansible_distribution_release] | default(ansible_distribution_release) }} non-free contrib
        filename: insync
        update_cache: no
      register: apt_repository
      when: not is_mac and not is_debian_bullseye and not is_wsl

    - name: Update APT package list
      become: yes
      apt:
        update_cache: yes
      when: apt_repository.changed
      register: apt_update
      retries: 5

    - name: Install Insync
      become: yes
      apt:
        package: "{{ item }}"
      loop:
        - insync
      when: not is_mac and not is_debian_bullseye and not is_wsl

    # macOS

    - name: Install Google Backup and Sync (macOS)
      homebrew_cask:
        name: google-backup-and-sync
      when: is_mac
